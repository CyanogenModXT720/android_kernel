/*
 * drivers/media/video/ov8810.h
 *
 * Register definitions for the OV8810 CameraChip.
 *
 * Author: Pallavi Kulkarni (ti.com)
 *
 * Copyright (C) 2008 Texas Instruments.
 *
 * This file is licensed under the terms of the GNU General Public License
 * version 2. This program is licensed "as is" without any warranty of any
 * kind, whether express or implied.
 */

#ifndef OV8810_H
#define OV8810_H
#define OV8810_I2C_ADDR		(0x6c >> 1)

/* ISP uses a 10-bit value, OV8810 uses a 12-bit value */
#define OV8810_BLACK_LEVEL_10BIT	8

/* ISP Private IOCTLs */
#define V4L2_CID_PRIVATE_SENSOR_REG_REQ		(V4L2_CID_PRIVATE_BASE + 20)
#define V4L2_CID_PRIVATE_SENSOR_ID_REQ		(V4L2_CID_PRIVATE_BASE + 22)
#define V4L2_CID_PRIVATE_COLOR_BAR     		(V4L2_CID_PRIVATE_BASE + 23)
#define V4L2_CID_PRIVATE_FLASH_NEXT_FRAME	(V4L2_CID_PRIVATE_BASE + 24)
#define V4L2_CID_PRIVATE_ORIENTATION     	(V4L2_CID_PRIVATE_BASE + 25)
#define V4L2_CID_PRIVATE_SENSOR_PARAMS_REQ	(V4L2_CID_PRIVATE_BASE + 27)
#define V4L2_CID_PRIVATE_START_MECH_SHUTTER_CAPTURE (V4L2_CID_PRIVATE_BASE + 28)
#define V4L2_CID_PRIVATE_SHUTTER_PARAMS     	(V4L2_CID_PRIVATE_BASE + 29)

/* Register initialization tables for ov8810 */
/* Terminating list entry for reg */
#define OV8810_REG_TERM		0xFFFF
/* Terminating list entry for val */
#define OV8810_VAL_TERM		0xFF

#define OV8810_USE_XCLKA	0
#define OV8810_USE_XCLKB	1

#define OV8810_CSI2_VIRTUAL_ID	0x1

#define DEBUG_BASE		0x08000000

#define VAUX_2_8_V		0x09
#define VAUX_1_8_V		0x05
#define VAUX_DEV_GRP_P1	0x20
#define VAUX_DEV_GRP_NONE	0x00

/* Sensor specific GPIO signals */
#define OV8810_RESET_GPIO	98
#define OV8810_STANDBY_GPIO	64

/* FPS Capabilities */
#define OV8810_MIN_FPS			3
#define OV8810_DEF_FPS			15
#define OV8810_MAX_FPS			30

/* Frame Delays */
#define OV8810_GAIN_FRAME_DELAY 1
#define OV8810_EXP_TIME_FRAME_DELAY 2

#define SENSOR_DETECTED		1
#define SENSOR_NOT_DETECTED	0

/* XCLK Frequency in Hz*/
#define OV8810_XCLK_MIN		24000000
#define OV8810_XCLK_MAX		24000000

#define OV8810_MAX_FRAME_LENGTH_LINES 0xFFFF

/* Gain Values (linear, Q8) */
#define OV8810_MIN_LINEAR_GAIN	((u16)(1.0 * 256))
#define OV8810_MAX_LINEAR_GAIN	((u16)(15.5 * 256))

/* Exposure time values (usecs)*/
#define OV8810_MIN_EXPOSURE	100
#define OV8810_MAX_EXPOSURE	1000000


/* Product ID */
#define OV8810_PID			0x8810

/* ------------------ Register defines ------------------ */
/*
 * System Control Registers
 */
#define OV8810_AGCL				0x3000
#define OV8810_AECL_H			0x3002
#define OV8810_AECL_L			0x3003
#define OV8810_PIDH				0x300A
#define OV8810_PIDL				0x300B
#define OV8810_R_PLL1			0x300E
#define OV8810_R_PLL1_VT_SYS_DIV_SHIFT 4
#define OV8810_R_PLL1_VT_SYS_DIV_MASK (0xF << \
	OV8810_R_PLL1_VT_SYS_DIV_SHIFT)
#define OV8810_R_PLL1_DIV8_MASK 	0x7
#define OV8810_R_PLL2			0x300F
#define OV8810_R_PLL2_OP_SYS_DIV_SHIFT 4
#define OV8810_R_PLL2_OP_SYS_DIV_MASK (0xF << \
	OV8810_R_PLL2_OP_SYS_DIV_SHIFT)
#define OV8810_R_PLL2_OP_PIX_DIV_MASK 	0xF
#define OV8810_R_PLL3			0x3010
#define OV8810_R_PLL3_PLL_MULT_MASK 	0x7F
#define OV8810_R_PLL4			0x3011
#define OV8810_R_PLL4_PRE_DIV_MASK 		0xF

#define OV8810_SYS				0x3012
#define OV8810_ADDVS_H		0x301E
#define OV8810_ADDVS_L		0x301F
#define OV8810_FRM_LEN_LINES_H	0x3020
#define OV8810_FRM_LEN_LINES_L	0x3021
#define OV8810_LINE_LEN_PCK_H	0x3022
#define OV8810_LINE_LEN_PCK_L	0x3023
#define OV8810_RESERVED_3058	0x3058
#define OV8810_IO_CTRL2			0x30B2
#define OV8810_DSIO0			0x30B3
#define OV8810_DSIO0_RPCLK_DIV_MASK 	0x3
#define OV8810_FRS0				0x30B7
#define OV8810_RESERVED_30E1	0x30E1
#define OV8810_FRS1				0x30E4
#define OV8810_FRS2				0x30E5
#define OV8810_FRS3				0x30E6
#define OV8810_FRS4				0x30E7
#define OV8810_FRS4_STRB_SOURCE_SEL_SHIFT 1
#define OV8810_FRS5				0x30E8
#define OV8810_FRS5_ROLLING_SHUT_STRB_EN_SHIFT 7
#define OV8810_FRS5_STRB_PLS_WIDTH_SHIFT 2
#define OV8810_FRS5_STROBE_MODE_SHIFT 0
#define OV8810_FRS6				0x30EA
#define OV8810_FRS7				0x30EB
#define OV8810_IMAGE_SYSTEM		0x30FA
#define OV8810_IMAGE_TRANSFORM	0x30F8
#define OV8810_CBAR	 			0x3303
#define OV8810_SIZE_H0 			0x3316
#define OV8810_DVP_CTRL08		0x3508
#define OV8810_DVP_CTRL0E		0x350E

/*
 * END - System Control Registers
 */


/*
 * OUT_TOP Registers
 */

#define OV8810_MIPI_CTRL01	0x3601

#define OV8810_MIPI_CTRL02	0x3602
#define OV8810_MIPI_CTRL02_VIRTUALCH_ID_MASK	(0x3 << 6)


#define OV8810_MIPI_CTRL0A	0x360A
#define OV8810_MIPI_CTRL0B	0x360B
#define OV8810_MIPI_CTRL0B_DSBL_DATA_LANE_2_MASK  0x1
#define OV8810_MIPI_CTRL0B_DSBL_DATA_LANE_1_MASK  0x2

#define OV8810_MIPI_CTRL14	0x3614
#define OV8810_MIPI_CTRL14_MIN_HS_ZERO_NUI_SHIFT	2
#define OV8810_MIPI_CTRL14_MIN_HS_ZERO_NUI_MASK		(0x3F << \
				OV8810_MIPI_CTRL14_MIN_HS_ZERO_NUI_SHIFT)
#define OV8810_MIPI_CTRL14_MIN_HS_ZERO_H_MASK	0x3

#define OV8810_MIPI_CTRL15	0x3615
#define OV8810_MIPI_CTRL15_MIN_HS_ZERO_L_MASK	0xFF

#define OV8810_MIPI_CTRL16	0x3616
#define OV8810_MIPI_CTRL16_MIN_HS_TRAIL_NUI_SHIFT	2
#define OV8810_MIPI_CTRL16_MIN_HS_TRAIL_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL16_MIN_HS_TRAIL_NUI_SHIFT)
#define OV8810_MIPI_CTRL16_MIN_HS_TRAIL_H_MASK	0x3

#define OV8810_MIPI_CTRL17	0x3617
#define OV8810_MIPI_CTRL17_MIN_HS_TRAIL_L_MASK	0xFF

#define OV8810_MIPI_CTRL18	0x3618
#define OV8810_MIPI_CTRL18_MIN_CLK_ZERO_NUI_SHIFT	2
#define OV8810_MIPI_CTRL18_MIN_CLK_ZERO_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL18_MIN_CLK_ZERO_NUI_SHIFT)
#define OV8810_MIPI_CTRL18_MIN_CLK_ZERO_H_MASK	0x3

#define OV8810_MIPI_CTRL19	0x3619
#define OV8810_MIPI_CTRL19_MIN_CLK_ZERO_L_MASK	0xFF

#define OV8810_MIPI_CTRL1A	0x361A
#define OV8810_MIPI_CTRL1A_MIN_CLK_PREPARE_NUI_SHIFT	2
#define OV8810_MIPI_CTRL1A_MIN_CLK_PREPARE_NUI_MASK		(0x3F << \
				OV8810_MIPI_CTRL1A_MIN_CLK_PREPARE_NUI_SHIFT)
#define OV8810_MIPI_CTRL1A_MIN_CLK_PREPARE_H_MASK	0x3

#define OV8810_MIPI_CTRL1B	0x361B
#define OV8810_MIPI_CTRL1B_MIN_CLK_PREPARE_L_MASK	0xFF

#define OV8810_MIPI_CTRL1C	0x361C
#define OV8810_MIPI_CTRL1C_MAX_CLK_PREPARE_NUI_SHIFT	2
#define OV8810_MIPI_CTRL1C_MAX_CLK_PREPARE_NUI_MASK		(0x3F << \
				OV8810_MIPI_CTRL1C_MAX_CLK_PREPARE_NUI_SHIFT)
#define OV8810_MIPI_CTRL1C_MAX_CLK_PREPARE_H_MASK	0x3

#define OV8810_MIPI_CTRL1D	0x361D
#define OV8810_MIPI_CTRL1D_MAX_CLK_PREPARE_L_MASK	0xFF

#define OV8810_MIPI_CTRL1E	0x361E
#define OV8810_MIPI_CTRL1E_MIN_CLK_POST_NUI_SHIFT	2
#define OV8810_MIPI_CTRL1E_MIN_CLK_POST_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL1E_MIN_CLK_POST_NUI_SHIFT)
#define OV8810_MIPI_CTRL1E_MIN_CLK_POST_H_MASK	0x3

#define OV8810_MIPI_CTRL1F	0x361F
#define OV8810_MIPI_CTRL1F_MIN_CLK_POST_L_MASK	0xFF

#define OV8810_MIPI_CTRL20	0x3620
#define OV8810_MIPI_CTRL20_MIN_CLK_TRAIL_NUI_SHIFT	2
#define OV8810_MIPI_CTRL20_MIN_CLK_TRAIL_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL20_MIN_CLK_TRAIL_NUI_SHIFT)
#define OV8810_MIPI_CTRL20_MIN_CLK_TRAIL_H_MASK	0x3

#define OV8810_MIPI_CTRL21	0x3621
#define OV8810_MIPI_CTRL21_MIN_CLK_TRAIL_L_MASK	0xFF

#define OV8810_MIPI_CTRL22	0x3622
#define OV8810_MIPI_CTRL22_MIN_LPX_P_NUI_SHIFT	2
#define OV8810_MIPI_CTRL22_MIN_LPX_P_NUI_MASK	(0x3F << \
					OV8810_MIPI_CTRL22_MIN_LPX_P_NUI_SHIFT)
#define OV8810_MIPI_CTRL22_MIN_LPX_P_H_MASK	0x3

#define OV8810_MIPI_CTRL23	0x3623
#define OV8810_MIPI_CTRL23_MIN_LPX_P_L_MASK	0xFF

#define OV8810_MIPI_CTRL24	0x3624
#define OV8810_MIPI_CTRL24_MIN_HS_PREPARE_NUI_SHIFT	2
#define OV8810_MIPI_CTRL24_MIN_HS_PREPARE_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL24_MIN_HS_PREPARE_NUI_SHIFT)
#define OV8810_MIPI_CTRL24_MIN_HS_PREPARE_H_MASK	0x3

#define OV8810_MIPI_CTRL25	0x3625
#define OV8810_MIPI_CTRL25_MIN_HS_PREPARE_L_MASK	0xFF

#define OV8810_MIPI_CTRL26	0x3626
#define OV8810_MIPI_CTRL26_MAX_HS_PREPARE_NUI_SHIFT	2
#define OV8810_MIPI_CTRL26_MAX_HS_PREPARE_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL26_MAX_HS_PREPARE_NUI_SHIFT)
#define OV8810_MIPI_CTRL26_MAX_HS_PREPARE_H_MASK	0x3

#define OV8810_MIPI_CTRL27	0x3627
#define OV8810_MIPI_CTRL27_MAX_HS_PREPARE_L_MASK	0xFF

#define OV8810_MIPI_CTRL28	0x3628
#define OV8810_MIPI_CTRL28_MIN_HS_EXIT_NUI_SHIFT	2
#define OV8810_MIPI_CTRL28_MIN_HS_EXIT_NUI_MASK	(0x3F << \
				OV8810_MIPI_CTRL28_MIN_HS_EXIT_NUI_SHIFT)
#define OV8810_MIPI_CTRL28_MIN_HS_EXIT_H_MASK	0x3

#define OV8810_MIPI_CTRL29	0x3629
#define OV8810_MIPI_CTRL29_MIN_HS_EXIT_L_MASK	0xFF


/*
 * END - OUT_TOP Registers
 */
/* ------------------------------------------------------ */

/* Exposure time values */
#define DEF_MIN_EXPOSURE	250
#define DEF_MAX_EXPOSURE	128000
#define DEF_EXPOSURE	    33000
#define EXPOSURE_STEP	    50

#define DEF_LINEAR_GAIN	(2*256)
#define LINEAR_GAIN_STEP	0x1

struct ov8810_sensor_regif {
	u16 len;
	u32 addr;
	u32 val;
} ;

enum ov8810_orientation {
	OV8810_NO_HORZ_FLIP_OR_VERT_FLIP = 0,
	OV8810_HORZ_FLIP_ONLY,
	OV8810_VERT_FLIP_ONLY,
	OV8810_HORZ_FLIP_AND_VERT_FLIP
};

enum ov8810_shutter_type {
	ROLLING_SHUTTER_TYPE = 0,
	MECH_SHUTTER_TYPE
};

enum ov8810_flash_type {
	LED_FLASH_TYPE = 0,
	XENON_FLASH_TYPE
};

/* define a structure for ov8810 register initialization values */
struct ov8810_reg {
	unsigned int reg;
	unsigned char val;
};

enum image_size_ov {
	SIZE_125K,
	SIZE_500K,
	SIZE_2M,
	SIZE_8M
};
enum pixel_format_ov {
	RAW10
};

#define OV_NUM_IMAGE_SIZES		4
#define OV_NUM_PIXEL_FORMATS		1
#define OV_NUM_FPS			3

struct capture_size_ov {
	unsigned long width;
	unsigned long height;
};

const static struct ov8810_reg ov8810_common[OV_NUM_IMAGE_SIZES][140] = {
	/* SIZE_408x306_Default settings */
	{
		{0x3100 , 0x06},
		{0x30fa , 0x00},
		{0x300f , 0x04},
		{0x300e , 0x05},
		{0x3010 , 0x28},
		{0x3011 , 0x22},
		{0x3000 , 0x30},
		{0x3002 , 0x09},
		{0x3003 , 0xb2},
		{0x3302 , 0x20},
		{0x30b2 , 0x10},
		{0x30a0 , 0x40},
		{0x3098 , 0x24},
		{0x3099 , 0x81},
		{0x309a , 0x64},
		{0x309b , 0x00},
		{0x309d , 0x64},
		{0x309e , 0x2d},
		{0x3320 , 0x82},
		{0x3321 , 0x02},
		{0x3322 , 0x04},
		{0x3328 , 0x40},
		{0x3329 , 0x00},
		{0x3306 , 0x00},
		{0x3316 , 0x03},
		{0x3079 , 0x0a},
		{0x30b3 , 0x0a},
		{0x33e5 , 0x02},
		{0x30f8 , 0x4f},
		{0x3020 , 0x01},
		{0x3021 , 0x5e},
		{0x3022 , 0x11},	/* insert dummy */
		{0x3023 , 0xE0},
		{0x3024 , 0x00},
		{0x3025 , 0x00},
		{0x307e , 0x00},
		{0x3026 , 0x00},
		{0x3027 , 0x00},
		{0x3028 , 0x0d},
		{0x3029 , 0x1f},
		{0x302a , 0x09},
		{0x302b , 0x9f},
		{0x302c , 0x01},
		{0x302d , 0x98},
		{0x302e , 0x01},
		{0x302f , 0x32},
		{0x3058 , 0x01},
		{0x3059 , 0xa0},
		{0x3068 , 0x08},
		{0x306b , 0x00},
		{0x3065 , 0x50},
		{0x3067 , 0x40},
		{0x3069 , 0x80},
		{0x3071 , 0x50},
		{0x3300 , 0xef},
		{0x3334 , 0x02},
		{0x3331 , 0x20},
		{0x3332 , 0x20},
		{0x3333 , 0x41},
		{0x3301 , 0x0f}, /* should this be 0x05? */
		{0x3091 , 0x00},
		{0x3006 , 0x00},
		{0x3082 , 0x80},
		{0x331e , 0x94},
		{0x331f , 0x6e},
		{0x3092 , 0x00},
		{0x3094 , 0x01},
		{0x3090 , 0x2b},
		{0x30ab , 0x44},
		{0x3095 , 0x0a},
		{0x308d , 0x00},
		{0x3082 , 0x00},
		{0x3080 , 0x40},
		{0x30aa , 0x59},
		{0x30a9 , 0x00},
		{0x30be , 0x08},
		{0x309f , 0x23},
		{0x3065 , 0x40},
		{0x3068 , 0x00},
		{0x30bf , 0x80},
		{0x309c , 0x00},
		{0x3084 , 0x44},
		{0x3016 , 0x03},
		{0x308a , 0x02},
		{0x30e9 , 0x09},
		{0x3075 , 0x29},
		{0x3076 , 0x29},
		{0x3077 , 0x29},
		{0x3078 , 0x29},
		{0x306a , 0x05},
		{0x3090 , 0x36},
		{0x333e , 0x00},
		{0x3000 , 0x7f},
		{0x3087 , 0x41},
		{0x3072 , 0x0d},
		{0x3319 , 0x04},
		{0x3319 , 0x02},
		{0x3300 , 0xe3},
		{0x3090 , 0x99},
		{0x309e , 0x1b},
		{0x30e3 , 0x0e},
		{0x30f0 , 0x00},
		{0x30f2 , 0x00},
		{0x30f4 , 0x90},
		{0x309e , 0x09},
		{0x3347 , 0x00},
		{0x3100 , 0x88},
		{0x3101 , 0x77},
		{0x300e , 0x24},
		{0x300e , 0x05},
		{0x300f , 0x04},
		{0x3092 , 0x00},
		{0x30f0 , 0x10},
		{0x30f1 , 0x56},
		{0x30fb , 0x50},
		{0x30f3 , 0xa0},
		{0x308d , 0x02},
		{0x3090 , 0x2e},
		{0x3095 , 0x0a},
		{0x3071 , 0x40},
		{0x3013 , 0x00},	/* AEC/AGC off */
		{0x3300 , 0x81},	/* all ISP except BLC off */
		{0x3320 , 0xc2},	/* AWB use manual 1x gain */
		{0x3000 , 0x0f},	/* 2x analog gain */
		{0x3002 , 0x01},	/* max exposure line */
		{0x3003 , 0x57},
		{0x300e , 0x25},	/* 2-lane, RAW 10, PCLK = 12MHz,
						MIPI_PCLK = 1.25x12 = 15MHz,
						MIPI_CLK = 60MHz, 30fps */
		{0x300f , 0x84},
		{0x3010 , 0x28},
		{0x3011 , 0x22},
		/* {0x30fa , 0x01}, */
		{0x30e7 , 0x41},  /* active lo FREX */
		{OV8810_REG_TERM, OV8810_VAL_TERM},
	},
	/* SIZE_816x612_Default settings */
	{
		{0x3100 , 0x06},
		{0x30fa , 0x00},
		{0x300f , 0x04},
		{0x300e , 0x05},
		{0x3010 , 0x28},
		{0x3011 , 0x22},
		{0x3000 , 0x30},
		{0x3002 , 0x09},
		{0x3003 , 0xb2},
		{0x3302 , 0x20},
		{0x30b2 , 0x10},
		{0x30a0 , 0x40},
		{0x3098 , 0x24},
		{0x3099 , 0x81},
		{0x309a , 0x64},
		{0x309b , 0x00},
		{0x309d , 0x64},
		{0x309e , 0x2d},
		{0x3320 , 0x82},
		{0x3321 , 0x02},
		{0x3322 , 0x04},
		{0x3328 , 0x40},
		{0x3329 , 0x00},
		{0x3306 , 0x00},
		{0x3316 , 0x03},
		{0x3079 , 0x0a},
		{0x30b3 , 0x09},
		{0x33e5 , 0x01},
		{0x30f8 , 0x4a},
		/* {0x3020 , 0x02}, */   /* 31.5 fps */
		/* {0x3021 , 0x90}, */   /* 31.5 fps */
		/* {0x3020 , 0x02}, */   /* 28.8 fps, 4.7ms blanking */
		/* {0x3021 , 0xce}, */   /* 28.8 fps, 4.7ms blanking */
		{0x3020 , 0x03},   /* 25.0 fps, 10ms blanking */
		{0x3021 , 0x3e},   /* 25.0 fps, 10ms blanking */
		{0x3022 , 0x09},
		{0x3023 , 0x08},
		{0x3024 , 0x00},
		{0x3025 , 0x00},
		{0x3026 , 0x00},
		{0x3027 , 0x00},
		{0x3028 , 0x0c},
		{0x3029 , 0xef},
		{0x302a , 0x09},
		{0x302b , 0x9f},
		{0x302c , 0x03},
		{0x302d , 0x30},
		{0x302e , 0x02},
		{0x302f , 0x64},
		{0x3058 , 0x01},
		{0x3059 , 0xa0},
		{0x3068 , 0x08},
		{0x306b , 0x00},
		{0x3065 , 0x50},
		{0x3067 , 0x40},
		{0x3069 , 0x80},
		{0x3071 , 0x50},
		{0x3300 , 0xef},
		{0x3334 , 0x02},
		{0x3331 , 0x20},
		{0x3332 , 0x20},
		{0x3333 , 0x41},
		{0x3301 , 0x0f}, /* should this be 0x05? */
		{0x3091 , 0x00},
		{0x3006 , 0x00},
		{0x3082 , 0x80},
		{0x331e , 0x94},
		{0x331f , 0x6e},
		{0x3092 , 0x00},
		{0x3094 , 0x01},
		{0x3090 , 0x2b},
		{0x30ab , 0x44},
		{0x3095 , 0x0a},
		{0x308d , 0x00},
		{0x3082 , 0x00},
		{0x3080 , 0x40},
		{0x30aa , 0x59},
		{0x30a9 , 0x00},
		{0x30be , 0x08},
		{0x309f , 0x23},
		{0x3065 , 0x40},
		{0x3068 , 0x00},
		{0x30bf , 0x80},
		{0x309c , 0x00},
		{0x3084 , 0x44},
		{0x3016 , 0x03},
		{0x308a , 0x01},
		{0x30e9 , 0x09},
		{0x3075 , 0x29},
		{0x3076 , 0x29},
		{0x3077 , 0x29},
		{0x3078 , 0x29},
		{0x306a , 0x05},
		{0x3090 , 0x36},
		{0x333e , 0x00},
		{0x3000 , 0x7f},
		{0x3087 , 0x41},
		{0x3072 , 0x0d},
		{0x3319 , 0x04},
		{0x3319 , 0x02},
		{0x3300 , 0xe3},
		{0x3090 , 0x99},
		{0x309e , 0x1b},
		{0x30e3 , 0x0e},
		{0x30f0 , 0x00},
		{0x30f2 , 0x00},
		{0x30f4 , 0x90},
		{0x309e , 0x09},
		{0x3347 , 0x00},
		{0x3100 , 0x88},
		{0x3101 , 0x77},
		{0x300e , 0x24},
		{0x300e , 0x05},
		{0x300f , 0x04},
		{0x3092 , 0x00},
		{0x30f0 , 0x10},
		{0x30f1 , 0x56},
		{0x30fb , 0x50},
		{0x30f3 , 0xa0},
		{0x308d , 0x02},
		{0x3090 , 0x2e},
		{0x3095 , 0x0a},
		{0x3071 , 0x40},
		{0x3013 , 0x00},	/* AEC/AGC off */
		{0x3300 , 0x81},	/* all ISP except BLC off */
		{0x3320 , 0xc2},	/* AWB use manual 1x gain */
		{0x3000 , 0x0f},	/* 2x analog gain */
		{0x3002 , 0x02},	/* max exposure line */
		{0x3003 , 0x89},
		{0x300e , 0x25},	/* 2-lane, RAW 10, PCLK = 24MHz,
						MIPI_PCLK = 1.25x24 = 30MHz,
						MIPI_CLK = 120MHz, 31.5fps */
		{0x300f , 0x44},
		{0x3010 , 0x28},
		{0x3011 , 0x22},
		/* {0x30fa , 0x01}, */
		{0x30e7 , 0x41},  /* active lo FREX */
		{OV8810_REG_TERM, OV8810_VAL_TERM},
	},
		/* SIZE_1632x1224 Default settings */
	{
		{0x3100 , 0x06},
		{0x30fa , 0x00},
		{0x300f , 0x04},
		{0x300e , 0x05},
		{0x3010 , 0x28},
		{0x3011 , 0x22},
		{0x3000 , 0x30},
		{0x3002 , 0x09},
		{0x3003 , 0xb2},
		{0x3302 , 0x20},
		{0x30b2 , 0x10},
		{0x30a0 , 0x40},
		{0x3098 , 0x24},
		{0x3099 , 0x81},
		{0x309a , 0x64},
		{0x309b , 0x00},
		{0x309d , 0x64},
		{0x309e , 0x2d},
		{0x3320 , 0x82},
		{0x3321 , 0x02},
		{0x3322 , 0x04},
		{0x3328 , 0x40},
		{0x3329 , 0x00},
		{0x3306 , 0x00},
		{0x3316 , 0x03},
		{0x3079 , 0x0a},
		{0x30b3 , 0x08},
		{0x33e5 , 0x00},
		{0x30f8 , 0x45},
		{0x302c , 0x06},
		{0x302d , 0x60},
		{0x302e , 0x04},
		{0x302f , 0xc8},
		/* {0x3020 , 0x04}, */  /* 21.5 fps */
		/* {0x3021 , 0xf4}, */  /* 21.5 fps */
		/* {0x3020 , 0x05}, */  /* 20.0 fps, 4.7ms blanking */
		/* {0x3021 , 0x53}, */  /* 20.0 fps, 4.7ms blanking */
		{0x3020 , 0x05},  /* 17.9 fps, 10ms blanking */
		{0x3021 , 0xE3},  /* 17.9 fps, 10ms blanking */
		{0x3022 , 0x09},
		{0x3023 , 0x10},
		{0x3024 , 0x00},
		{0x3025 , 0x00},
		{0x307e , 0x00},
		{0x3026 , 0x00},
		{0x3027 , 0x00},
		{0x3028 , 0x0c},
		{0x3029 , 0xdf},
		{0x302a , 0x09},
		{0x302b , 0x9f},
		{0x3058 , 0x01},
		{0x3059 , 0xa0},
		{0x3068 , 0x08},
		{0x306b , 0x00},
		{0x3065 , 0x50},
		{0x3067 , 0x40},
		{0x3069 , 0x80},
		{0x3071 , 0x50},
		{0x3300 , 0xef},
		{0x3334 , 0x02},
		{0x3331 , 0x20},
		{0x3332 , 0x20},
		{0x3333 , 0x41},
		{0x3301 , 0x0b}, /* should this be 0x01? */
		{0x3091 , 0x00},
		{0x3006 , 0x00},
		{0x3082 , 0x80},
		{0x331e , 0x94},
		{0x331f , 0x6e},
		{0x3092 , 0x00},
		{0x3094 , 0x01},
		{0x3090 , 0x2b},
		{0x30ab , 0x44},
		{0x3095 , 0x0a},
		{0x308d , 0x00},
		{0x3082 , 0x00},
		{0x3080 , 0x40},
		{0x30aa , 0x59},
		{0x30a9 , 0x00},
		{0x30be , 0x08},
		{0x309f , 0x23},
		{0x3065 , 0x40},
		{0x3068 , 0x00},
		{0x30bf , 0x80},
		{0x309c , 0x00},
		{0x3084 , 0x44},
		{0x3016 , 0x03},
		{0x308a , 0x02},
		{0x30e9 , 0x09},
		{0x3075 , 0x29},
		{0x3076 , 0x29},
		{0x3077 , 0x29},
		{0x3078 , 0x29},
		{0x306a , 0x05},
		{0x3090 , 0x36},
		{0x333e , 0x00},
		{0x3000 , 0x7f},
		{0x3087 , 0x41},
		{0x3072 , 0x0d},
		{0x3319 , 0x04},
		{0x3319 , 0x04},
		{0x3300 , 0xe3},
		{0x3090 , 0x99},
		{0x309e , 0x1b},
		{0x30e3 , 0x0e},
		{0x30f0 , 0x00},
		{0x30f2 , 0x00},
		{0x30f4 , 0x90},
		{0x309e , 0x09},
		{0x3347 , 0x00},
		{0x3100 , 0x88},
		{0x3101 , 0x77},
		{0x300e , 0x24},
		{0x300e , 0x05},
		{0x300f , 0x04},
		{0x3092 , 0x00},
		{0x30f0 , 0x10},
		{0x30f1 , 0x56},
		{0x30fb , 0x50},
		{0x30f3 , 0xa0},
		{0x308d , 0x02},
		{0x3090 , 0x2e},
		{0x3095 , 0x0a},
		{0x3071 , 0x40},
		{0x3013 , 0x00},	/* AEC/AGC off */
		{0x3300 , 0x81},	/* all ISP except BLC off */
		{0x3320 , 0xc2},	/* AWB use manual 1x gain */
		{0x3000 , 0x0f},	/* 2x analog gain */
		{0x3002 , 0x04},	/* max exposure line */
		{0x3003 , 0xed},
		{0x300e , 0x25},	/* 2-lane, RAW 10, PCLK = 62.4MHz,
						MIPI_PCLK = 1.25x62.4 = 78MHz,
						MIPI_CLK = 312MHz, 21fps */
		{0x300f , 0x24},
		{0x3010 , 0x34},
		{0x3011 , 0x22},
		/* {0x30fa , 0x01}, */
		{0x30e7 , 0x41},  /* active lo FREX */
		{OV8810_REG_TERM, OV8810_VAL_TERM},
	},
	/* SIZE_8M Default settings - Lisa's */
	{
		{0x3100, 0x06},
		{0x30fa, 0x00},
		{0x300f, 0x04},
		{0x300e, 0x05},
		{0x3010, 0x28},
		{0x3011, 0x22},
		{0x3000, 0x30},
		{0x3002, 0x09},
		{0x3003, 0xb2},
		{0x3302, 0x20},
		{0x30b2, 0x10},
		{0x30a0, 0x40},
		{0x3098, 0x24},
		{0x3099, 0x81},
		{0x309a, 0x64},
		{0x309b, 0x00},
		{0x309d, 0x64},
		{0x309e, 0x2d},
		{0x3320, 0x82},
		{0x3321, 0x02},
		{0x3322, 0x04},
		{0x3328, 0x40},
		{0x3329, 0x00},
		{0x3306, 0x00},
		{0x3316, 0x03},
		{0x3079, 0x0a},
		{0x30b3, 0x08},
		{0x33e5, 0x00},
		{0x30f8, 0x40},
		{0x302c, 0x0c},
		{0x302d, 0xc0},
		{0x302e, 0x09},
		{0x302f, 0x90},
		{0x3020, 0x09},  /* 6.833 fps */
		{0x3021, 0xb4},  /* 6.833 fps */
		{0x3022, 0x0f},
		{0x3023, 0x78},
		{0x3024, 0x00},
		{0x3025, 0x00},
		{0x307e, 0x00},
		{0x3026, 0x00},
		{0x3027, 0x00},
		{0x3028, 0x0c},
		{0x3029, 0xdf},
		{0x302a, 0x09},
		{0x302b, 0x9f},
		{0x3058, 0x01},
		{0x3059, 0xa0},
		{0x3068, 0x08},
		{0x306b, 0x00},
		{0x3065, 0x50},
		{0x3067, 0x40},
		{0x3069, 0x80},
		{0x3071, 0x40},
		{0x3300, 0xef},
		{0x3334, 0x02},
		{0x3331, 0x20},
		{0x3332, 0x20},
		{0x3333, 0x41},
		{0x3301 , 0x01},
		{0x3091, 0x00},
		{0x3006, 0x00},
		{0x3082, 0x80},
		{0x331e, 0x94},
		{0x331f, 0x6e},
		{0x331c, 0x28},
		{0x331d, 0x21},
		{0x3092, 0x00},
		{0x3094, 0x01},
		{0x3090, 0x2b},
		{0x30ab, 0x44},
		{0x3095, 0x0a},
		{0x308d, 0x00},
		{0x3082, 0x00},
		{0x3080, 0x40},
		{0x30aa, 0x59},
		{0x30a9, 0x00},
		{0x30be, 0x08},
		{0x309f, 0x23},  /* reset DSP */
		{0x3065, 0x40},
		{0x3068, 0x00},
		{0x30bf, 0x80},
		{0x309c, 0x00},
		{0x3084, 0x44},
		{0x3016, 0x03},
		{0x308a, 0x01},
		{0x30e9, 0x09},
		{0x3075, 0x29},
		{0x3076, 0x29},
		{0x3077, 0x29},
		{0x3078, 0x29},
		{0x306a, 0x05},
		{0x3090, 0x36},
		{0x333e, 0x00},
		{0x3000, 0x7f},
		{0x3087, 0x41},
		{0x3305, 0xa0},
		{0x3072, 0x01},
		{0x3319, 0x04},
		{0x3319, 0x08},
		{0x3300, 0xe3},
		{0x3090, 0x99},
		{0x309e, 0x1b},
		{0x30e3, 0x0e},
		{0x30f0, 0x00},
		{0x30f2, 0x00},
		{0x30f4, 0x90},
		{0x3347, 0x00},
		{0x3100, 0x88},
		{0x3101, 0x77},
		{0x300f, 0x04},
		{0x3092, 0x00},
		{0x30f0, 0x10},
		{0x30f1, 0x56},
		{0x30fb, 0x50},
		{0x30f3, 0xa0},
		{0x308d, 0x02},
		{0x3090, 0x2e},
		{0x3095, 0x0a},
		{0x3071, 0x40},
		{0x3013, 0x00},	/* AEC/AGC, off */
		{0x3300, 0x83},	/* all, ISP, except BLC, off */
		{0x3320, 0xc2},	/* AWB, use, manual, 1x, gain */
		{0x3000, 0x0f},	/* 2x, analog, gain */
		{0x3002, 0x09},	/* max, exposure, line */
		{0x3003, 0xb2},
		{0x300e, 0x25},	/* 2-lane, RAW, 10, PCLK = 62.4MHz,
						MIPI_PCLK = 1.25x62.4 = 78MHz,
						MIPI_CLK = 312MHz, 6.34fps */
		{0x300f, 0x24},
		{0x3010, 0x28},
		{0x3011, 0x22},
		{0x30e7 , 0x41},  /* active lo FREX */
		{OV8810_REG_TERM, OV8810_VAL_TERM},
	},
};

const static struct ov8810_reg ov8810_common_csi2[] = {
	{OV8810_MIPI_CTRL0B, 0x0f},	/* disable MIPI output (enabled
						later) */
	{0x3601 , 0x16},
	{OV8810_REG_TERM, OV8810_VAL_TERM},
};

const static struct ov8810_reg ov8810_mech_shutter[] = {
	{0x30e1, 0xd0},	/* Set array reset control for frame mode */
	{0x350e, 0x44},	/* Use sensor native vsync for frame mode */
	{0x3058, 0x0c},	/* Set internal analog control for frame mode */
	{OV8810_REG_TERM, OV8810_VAL_TERM},
};

struct ov8810_platform_data {
	/* Set power state, zero is off, non-zero is on. */
	int (*power_set)(struct device *dev, enum v4l2_power power);
	/* Default registers written after power-on or reset. */
	const struct ov8810_reg *default_regs;
	int (*ifparm)(struct v4l2_ifparm *p);
	int (*priv_data_set)(void *);
};

/* Array of image sizes supported by OV8810.  These must be ordered from
 * smallest image size to largest.
 */
const static struct capture_size_ov ov8810_sizes[] = {
	/* SIZE_125K */
	{ 408, 306 },
	/* SIZE_500K */
	{ 816, 612 },
	/* SIZE_2M */
	{ 1632, 1224 },
	/* SIZE_8M */
	{ 3264, 2448 },
};

#endif /* ifndef OV8810_H */

