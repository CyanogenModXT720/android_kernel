# @(#) balden@belcarra.com/seth2.rillanon.org|otg/functions/network/Kconfig|20070531044942|29753
# Copyright (c) 2005-2006 Belcarra Technologies 2005 Corp
menu "OTG Network Function"
	depends on OTG

        config OTG_NETWORK

        tristate "USBOTG Network Interface Function Driver"
        depends on OTG
        default OTG


        menu "USBOTG Network Interface Function Driver options"
                depends on OTG_NETWORK

        #comment --
        #comment "Network Device Product Information"

        #config OTG_NETWORK_VENDORID
        #        depends on OTG && OTG_NETWORK
        #        default "0x15ec"
        #	---help---
        #	The USB Peripheral Vendor ID. This should be set to your assigned
        #	USB Vendor ID (www.usb.org). The USB Host will use this and the
        #	Product ID to find and load an appropriate device driver.

        config OTG_NETWORK_PRODUCTID
                hex "ProductID (hex value)"
                depends on OTG && OTG_NETWORK
                default "0x6424"
        	---help---
        	The USB Peripheral Product ID. This should be set to your a
        	unique value for this product. The USB Host will use this and the
        	Vendor ID to find and load an appropriate device driver.

        #config OTG_NETWORK_BCDDEVICE
        #        hex "bcdDevice (binary-coded decimal)"
        #        depends on OTG && OTG_NETWORK
        #        default "0x0100"

        #config OTG_NETWORK_MANUFACTURER
        #        string "iManufacturer (string)"
        #        depends on OTG && OTG_NETWORK
        #        default "Belcarra"
        #        ---help---
        #        This will be used as the iManufacturer string descriptor.

        #config OTG_NETWORK_PRODUCT_NAME
        #        string "iProduct (string)"
        #        depends on OTG && OTG_NETWORK
        #        default "Belcarra Network Device"
        #        ---help---
        #        This will be used as the iProduct string descriptor.

        comment --
        comment "Network Protocols"

        config OTG_NETWORK_EEM
                bool 'Enable CDC/EEM'
                default TRUE
                ---help---
                Implement CDC/EEM (Ethernet Emulation Model) support.
                This is the simplest and most efficent protocol available.
                It requires only Bulk IN and Bulk Out endpoints and can
                implement data streaming. It can be used for any type of
                network device.

        config OTG_NETWORK_EEM_CRC
                bool "Append 32bit CRC"
                depends on OTG && OTG_NETWORK_EEM
                default TRUE
                ---help---
                Setting this allows the host and device to verify that
                all network frames have been successfully transferred.

        config OTG_NETWORK_EEM_STREAM
                bool "Streaming mode"
                depends on OTG && OTG_NETWORK_EEM
                default FALSE
                ---help---
                Setting this will tell the EEM driver to stream data as much as
                possible. This usually will result in higher throughput but possibly
                slightly higher latencies.

        config OTG_NETWORK_EEM_ZLE
                bool "Use ZLE not ZLP"
                depends on OTG && OTG_NETWORK_EEM
                default FALSE
                ---help---
                Setting this will force the use of ZLE (Zero Length EEM packet)
                instead of ZLP (Zero Length Packets) when a short packet is required
                to terminate a transfer.

        config OTG_NETWORK_ECM
                bool 'Enable CDC/ECM networking'
                default FALSE
                ---help---
                ECM implements the USB CDC ECM Class Specification Ethernet
                Class Model to support infra-structure devices. This is the
                older style of CDC networking over USB and requires 2 BULK
                (IN and OUT) endpoints, an Interrupt endpoint and the device
                must properly support SET INTERFACE.

        comment --
        comment "Older Network Protocols"

        config OTG_NETWORK_DEPRECATED
                bool "Enable older network protocols"
                default FALSE
                ---help---
                Allow older protocols to be used.

        config OTG_NETWORK_BLAN
                bool 'Enable MDLM-BLAN networking'
                depends on OTG && OTG_NETWORK_DEPRECATED
                default FALSE
                ---help---
                BLAN supports non-infrastructure devices in virtual
                bridged network environment. This protocol is deprecated.

        config OTG_NETWORK_BLAN_CRC
                bool "Append 32bit CRC"
                depends on OTG && OTG_NETWORK_BLAN
                default TRUE
                ---help---
                Setting this allows the host and device to verify that
                all network frames have been successfully transferred.

        config OTG_NETWORK_BLAN_AUTO_CONFIG
                bool "Support Vendor Requests to configure the network interface"
                depends on OTG && OTG_NETWORK_BLAN
                default TRUE
                ---help---
                The driver will automatically configure the network interface
                based on the IPADDR sent from the host to the device during
                enumeration. This eliminates the need for hotplug.

        config OTG_NETWORK_BLAN_NONBRIDGED
                bool "Act as infrastructure device"
                depends on OTG && OTG_NETWORK_BLAN
                default FALSE
                ---help---
                Normally MDLM-BLAN is used to support smart devices in a virtual
                network LAN implemented over USB with the USB Host acting as
                a bridge between itself and all similiar devices. This option
                tells the host to instead treat this as an infrastructure device
                and not participate in the bridge.

        config OTG_NETWORK_SAFE
                bool 'Enable MDLM-SAFE networking'
                depends on OTG && OTG_NETWORK_DEPRECATED
                default FALSE
                ---help---
                SAFE supports infrastructure devices but does not
                require support for SET INTERFACE or interrupt endpoints.
                This protocol is deprecated.

        config OTG_NETWORK_SAFE_CRC
                bool "Append 32bit CRC"
                depends on OTG && OTG_NETWORK_SAFE
                default TRUE
                ---help---
                Setting this allows the host and device to verify that
                all network frames have been successfully transferred.

        config OTG_NETWORK_BASIC
                bool 'Enable Basic network'
                depends on OTG && OTG_NETWORK_DEPRECATED
                default FALSE
                ---help---
                Implement a very simple network configuration
                with a single data interface. This protocol is deprecated.

        config OTG_NETWORK_BASIC2
                bool 'Enable Basic2 network'
                depends on OTG && OTG_NETWORK_DEPRECATED
                default FALSE
                ---help---
                Implement a very simple network configuration with
                two interfaces. This protocol is deprecated.


        #config OTG_NETWORK_START_SINGLE
        #        bool " Start Single Urb Test"
        #        depends on OTG && OTG_NETWORK
        #        default n
        #        ---help---
        #        Used for testing, will not allow multiple receive urbs
        #        to be queued. This will generally slow transfer speeds
        #        and is used to test bus interface drivers operate properly
        #        when there is no receive urb queued.

        #config OTG_NETWORK_EP0TEST
        #        bool " EP0 Test"
        #        depends on OTG && OTG_NETWORK
        #        default n
        #        ---help---
        #        Used for testing, this will change the product string to
        #        a string that is a multiple of the ep0 packetsize. This
        #        can be used to verify that the bus interface driver
        #        properly sends a ZLP after a string.

        comment --
        comment "Linux Network Options)"
        config OTG_NETWORK_HOTPLUG
                bool "Enable additional network hotplug support"
                depends on OTG && HOTPLUG && OTG_NETWORK
                default FALSE
                ---help---
                Enable additional Hotplug support. The network_fd agent script
                will be called with ACTION=attach or ACTION=detach when the
                device is configured or de-configured.

        config OTG_NETWORK_HOTPLUG_PATH
		string "Pathname of master hotplug program"
		depends on OTG && HOTPLUG && OTG_NETWORK && OTG_NETWORK_HOTPLUG
		default  "/usr/sbin/hotplug"


if (OTG != 'y')
        comment --
        comment "Network Device Type and Address configuration (testing)"
        config OTG_NETWORK_TESTING
                bool "Enable auto-config for testing"
                depends on OTG && OTG_NETWORK_EEM
                default FALSE
                ---help---
                Allow older protocols to be used.


        config OTG_NETWORK_INFRASTRUCTURE
                bool 'Infrastructure Device'
                depends on OTG_NETWORK_TESTING
                default FALSE
                ---help---
		The USB Peripheral is implementing networking as an
		infrastructure device. More specifically a device
		that may bridge network frames to another network.
		This will enable a RARPD reply to requests from the
		USB Host for a MAC address (for the host to use.)

        config OTG_NETWORK_RARPD_AUTO_CONFIG
                bool "Automatically configure the network interface using RARPD"
                depends on OTG_NETWORK_TESTING
                default TRUE
                ---help---
                The driver will automatically configure the network interface
                using RARPD. RARPD is an extension to RARP that allows the
                USB Host and USB Peripheral to determine if link level configuration
                of MAC addresses.

        config OTG_NETWORK_RFC868_AUTO_CONFIG
                bool "Set the USB Peripheral System time using RFC868 Time Protocol (UDP)"
                depends on OTG_NETWORK_TESTING
                default TRUE
                ---help---
                The driver will automatically set the system time
                using Time of Day (UDP) Service  (RFC868.)
endif
        endmenu
endmenu
